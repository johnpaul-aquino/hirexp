# HireXp Development Docker Compose Configuration
# This setup includes PostgreSQL, Redis, and the Next.js application

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: hirexp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: hirexp
      POSTGRES_PASSWORD: hirexp_dev_password
      POSTGRES_DB: hirexp
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hirexp -d hirexp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hirexp-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hirexp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hirexp-network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: hirexp-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Database
      DATABASE_URL: postgresql://hirexp:hirexp_dev_password@postgres:5432/hirexp?schema=public

      # Redis (local)
      REDIS_URL: redis://redis:6379

      # NextAuth
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-dev_secret_change_in_production_12345678}

      # OAuth (load from .env.docker)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}

      # Cloudinary (load from .env.docker)
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}

      # Email (load from .env.docker)
      EMAIL_SERVER_HOST: ${EMAIL_SERVER_HOST}
      EMAIL_SERVER_PORT: ${EMAIL_SERVER_PORT}
      EMAIL_SERVER_USER: ${EMAIL_SERVER_USER}
      EMAIL_SERVER_PASSWORD: ${EMAIL_SERVER_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}

      # Application
      APP_URL: http://localhost:3000
      APP_NAME: HireXp
      NODE_ENV: development
    volumes:
      # Mount source code for hot reload
      - .:/app
      # Prevent overwriting node_modules
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hirexp-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hirexp-network:
    driver: bridge
